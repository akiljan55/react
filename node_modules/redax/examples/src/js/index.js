import React from 'react';
import ReactDOM from 'react-dom';
import { Map, List } from 'immutable';

import store from './store/store';
const {
  actions: {
    login,
    updateFormField,
    incrementThenDecrementTwice,
    haveConversation
  }
} = store;

class App extends React.Component {
  login(event) {
    event.preventDefault();
    login(this.props.form.get('username'), this.props.form.get('password'));
  }

  render() {
    return (
      <div>
        <form onSubmit={this.login.bind(this)}>
          <p>
            Username: username, Password: password
          </p>
          <label>
            Username
            <input type="text"
              onChange={updateFormField.bind(null, 'loginForm', 'username')}
              value={this.props.form.get('username')} />
          </label>
          <label>
            Password
            <input type="password"
              onChange={updateFormField.bind(null, 'loginForm', 'password')}
              value={this.props.form.get('password')} />
          </label>
          <button type="submit">
            Login
          </button>
          {
            this.props.login.get('loading') && (
              <p>
                Loading...
              </p>
            )
          }
          {
            this.props.login.get('error') && (
              <p>
                {this.props.login.get('error')}
              </p>
            )
          }
          {
            this.props.login.get('token') && (
              <p>
                {this.props.login.get('token')}
              </p>
            )
          }
        </form>
        <button onClick={incrementThenDecrementTwice}>
          Increment then decrement twice: {this.props.count}
        </button>
        <p>
          Conversation:
        </p>
        {this.props.conversation.map(message => <p key={message}>{message}</p>)}
        <button onClick={haveConversation}>
          Have conversation
        </button>
      </div>
    );
  }
}

function mapStateToProps(state) {
  return {
    login: state.get('login', Map()),
    form: state.get('loginForm', Map()),
    count: state.get('count'),
    conversation: state.get('conversation', List())
  };
}

const ConnectedApp = store.map(mapStateToProps).to(App);

ReactDOM.render(<ConnectedApp />, document.getElementById('app'));
