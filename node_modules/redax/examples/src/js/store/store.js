import Store from '../../../../lib/index';
import { List } from 'immutable';

import * as login from './login';

const store = new Store(
  Object.assign(
    {},
    login,
    {
      updateFormField: function (state, form, field, event) {
        let value;

        switch (event.target.type) {
          case 'checkbox':
          case 'radio':
            value = event.target.checked;
          default:
            value = event.target.value;
        }

        return state.setIn([form, field], value);
      },
      decrement: function (state) {
        return state.set('count', state.get('count') - 1);
      },
      incrementThenDecrementTwice: function (state) {
        this.actions.decrement();
        this.actions.decrement();
        return state.set('count', state.get('count') + 1);
      },
      setCount: function (state) {
        return state.set('count', 0);
      },
      respondToHowAreYouResponse: function (state) {
        const conversation = state.get('conversation', List())
          .push('I\'m good also, thanks for asking.');

        return state.set('conversation', conversation);
      },
      respondToHowAreYou: function (state) {
        const conversation = state.get('conversation', List())
          .push('I\'m fine thanks. Yourself?');

        return state.set('conversation', conversation);
      },
      respondToHello: function (state) {
        const conversation = state.get('conversation', List())
          .push('Hi! How are you?');

        this.actions.respondToHowAreYou();
        this.actions.respondToHowAreYouResponse();

        return state.set('conversation', conversation);
      },
      haveConversation: function (state) {
        const conversation = state.get('conversation', List())
          .clear()
          .push('Hello!');

        this.actions.respondToHello();

        return state.set('conversation', conversation);
      }
    }
  )
);

store.actions.setCount();

export default store;
